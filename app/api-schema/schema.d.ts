/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/tasks": {
    /** Retrieve a list of tasks */
    get: {
      parameters: {
        query?: {
          /** @description Search query */
          search?: string;
          /** @description Filter by status */
          status?: "_0" | "_1" | "_2" | "_3";
          /** @description Filter by priority */
          priority?: "_0" | "_1" | "_2";
          /** @description Page number for pagination */
          page?: number;
          /** @description Number of items per page */
          limit?: number;
        };
      };
      responses: {
        /** @description A list of tasks */
        200: {
          content: {
            "application/json": components["schemas"]["Task"][];
          };
        };
      };
    };
    /** Create a new task */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["Task"];
        };
      };
      responses: {
        /** @description Task created */
        201: {
          content: never;
        };
      };
    };
  };
  "/tasks/{taskId}": {
    /** Retrieve a task by its ID */
    get: {
      parameters: {
        path: {
          taskId: string;
        };
      };
      responses: {
        /** @description Details of a task */
        200: {
          content: {
            "application/json": components["schemas"]["Task"];
          };
        };
      };
    };
    /** Update an existing task */
    put: {
      parameters: {
        path: {
          taskId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Task"];
        };
      };
      responses: {
        /** @description Task updated */
        200: {
          content: never;
        };
      };
    };
    /** Delete a task */
    delete: {
      parameters: {
        path: {
          taskId: string;
        };
      };
      responses: {
        /** @description Task deleted */
        204: {
          content: never;
        };
      };
    };
    parameters: {
      path: {
        taskId: string;
      };
    };
  };
  "/authenticate": {
    /** Authenticate a user */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["UserCredentials"];
        };
      };
      responses: {
        /** @description Authentication successful */
        200: {
          content: {
            "application/json": {
              token?: string;
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Task: {
      /** Format: uuid */
      id: string;
      title: string;
      description?: string;
      status: string;
      priority?: string;
      /** Format: date-time */
      dueDate?: string;
    };
    UserCredentials: {
      username: string;
      password: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
